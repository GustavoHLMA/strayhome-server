generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserTest {
  id       String  @id @default(uuid())
  name     String
  phone    String?
  email    String  @unique
  password String
}
model User {
  id            String  @id @default(uuid())
  name          String
  birthdate     DateTime
  phone         String?
  email         String  @unique
  password      String
  image         String?

  animals       Animal[]

  campaigns     Campaign[]

  favoriteAnimals Animal[] @relation("UserFavoriteAnimals")

  favoriteCampaigns Campaign[] @relation("UserFavoriteCampaigns")

  comments      Comment[]
}


model Animal {
  id            String @id @default(uuid())
  name          String
  species       String
  image         String
  bio           String
  gender        String
  statusAdoption Boolean @default(true)

  owner         User @relation(fields: [ownerId], references: [id])
  ownerId       String

  campaign      Campaign? @relation(fields: [campaignId], references: [id])
  campaignId    String?

  feed          Feed @relation(fields: [feedId], references: [id], onDelete: Cascade)
  feedId        String @unique

  favoritedBy   User[] @relation("UserFavoriteAnimals")
}
model Campaign {
  id              String   @id @default(uuid())       
  name            String                                   
  description     String                                   
  image           String                                   
  target          Float                                    
  amountCollected Float    @default(0)                    
  startDate       DateTime
  deadline        DateTime                               
  campaignIdOnBlockchain String @unique                   

  creator         User     @relation(fields: [creatorId], references: [id]) 
  creatorId       String
  
  feed            Feed     @relation(fields: [feedId], references: [id], onDelete: Cascade)   
  feedId          String   @unique

  favoritedBy     User[]   @relation("UserFavoriteCampaigns") 

  animals         Animal[]                              
}


model Feed {
  id            String @id @default(uuid())
  posts         Post[]

  animal        Animal? 
  animalId      String?  

  campaign      Campaign?
  campaignId    String? 
}

model Post {
  id            String @id @default(uuid())
  media         String
  description   String?

  feed          Feed @relation(fields: [feedId], references: [id], onDelete: Cascade)
  feedId        String

  comments  Comment[]
}

model Comment {
  id             String @id @default(uuid())
  content        String
  createdAt      DateTime @default(now())

  author    User      @relation(fields: [authorId], references: [id])
  authorId  String

  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
}